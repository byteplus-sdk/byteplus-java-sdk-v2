/*
 * smc
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.byteplus.smc.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * LvInfoForDescribeMigrationSourcesOutput
 */



public class LvInfoForDescribeMigrationSourcesOutput {
  @SerializedName("BlockDevices")
  private List<String> blockDevices = null;

  @SerializedName("FsType")
  private String fsType = null;

  @SerializedName("LvName")
  private String lvName = null;

  @SerializedName("LvPath")
  private String lvPath = null;

  @SerializedName("LvSize")
  private Long lvSize = null;

  @SerializedName("LvUUID")
  private String lvUUID = null;

  @SerializedName("LvUsedSize")
  private Long lvUsedSize = null;

  @SerializedName("MountPoint")
  private String mountPoint = null;

  @SerializedName("VgName")
  private String vgName = null;

  public LvInfoForDescribeMigrationSourcesOutput blockDevices(List<String> blockDevices) {
    this.blockDevices = blockDevices;
    return this;
  }

  public LvInfoForDescribeMigrationSourcesOutput addBlockDevicesItem(String blockDevicesItem) {
    if (this.blockDevices == null) {
      this.blockDevices = new ArrayList<String>();
    }
    this.blockDevices.add(blockDevicesItem);
    return this;
  }

   /**
   * Get blockDevices
   * @return blockDevices
  **/
  @Schema(description = "")
  public List<String> getBlockDevices() {
    return blockDevices;
  }

  public void setBlockDevices(List<String> blockDevices) {
    this.blockDevices = blockDevices;
  }

  public LvInfoForDescribeMigrationSourcesOutput fsType(String fsType) {
    this.fsType = fsType;
    return this;
  }

   /**
   * Get fsType
   * @return fsType
  **/
  @Schema(description = "")
  public String getFsType() {
    return fsType;
  }

  public void setFsType(String fsType) {
    this.fsType = fsType;
  }

  public LvInfoForDescribeMigrationSourcesOutput lvName(String lvName) {
    this.lvName = lvName;
    return this;
  }

   /**
   * Get lvName
   * @return lvName
  **/
  @Schema(description = "")
  public String getLvName() {
    return lvName;
  }

  public void setLvName(String lvName) {
    this.lvName = lvName;
  }

  public LvInfoForDescribeMigrationSourcesOutput lvPath(String lvPath) {
    this.lvPath = lvPath;
    return this;
  }

   /**
   * Get lvPath
   * @return lvPath
  **/
  @Schema(description = "")
  public String getLvPath() {
    return lvPath;
  }

  public void setLvPath(String lvPath) {
    this.lvPath = lvPath;
  }

  public LvInfoForDescribeMigrationSourcesOutput lvSize(Long lvSize) {
    this.lvSize = lvSize;
    return this;
  }

   /**
   * Get lvSize
   * @return lvSize
  **/
  @Schema(description = "")
  public Long getLvSize() {
    return lvSize;
  }

  public void setLvSize(Long lvSize) {
    this.lvSize = lvSize;
  }

  public LvInfoForDescribeMigrationSourcesOutput lvUUID(String lvUUID) {
    this.lvUUID = lvUUID;
    return this;
  }

   /**
   * Get lvUUID
   * @return lvUUID
  **/
  @Schema(description = "")
  public String getLvUUID() {
    return lvUUID;
  }

  public void setLvUUID(String lvUUID) {
    this.lvUUID = lvUUID;
  }

  public LvInfoForDescribeMigrationSourcesOutput lvUsedSize(Long lvUsedSize) {
    this.lvUsedSize = lvUsedSize;
    return this;
  }

   /**
   * Get lvUsedSize
   * @return lvUsedSize
  **/
  @Schema(description = "")
  public Long getLvUsedSize() {
    return lvUsedSize;
  }

  public void setLvUsedSize(Long lvUsedSize) {
    this.lvUsedSize = lvUsedSize;
  }

  public LvInfoForDescribeMigrationSourcesOutput mountPoint(String mountPoint) {
    this.mountPoint = mountPoint;
    return this;
  }

   /**
   * Get mountPoint
   * @return mountPoint
  **/
  @Schema(description = "")
  public String getMountPoint() {
    return mountPoint;
  }

  public void setMountPoint(String mountPoint) {
    this.mountPoint = mountPoint;
  }

  public LvInfoForDescribeMigrationSourcesOutput vgName(String vgName) {
    this.vgName = vgName;
    return this;
  }

   /**
   * Get vgName
   * @return vgName
  **/
  @Schema(description = "")
  public String getVgName() {
    return vgName;
  }

  public void setVgName(String vgName) {
    this.vgName = vgName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LvInfoForDescribeMigrationSourcesOutput lvInfoForDescribeMigrationSourcesOutput = (LvInfoForDescribeMigrationSourcesOutput) o;
    return Objects.equals(this.blockDevices, lvInfoForDescribeMigrationSourcesOutput.blockDevices) &&
        Objects.equals(this.fsType, lvInfoForDescribeMigrationSourcesOutput.fsType) &&
        Objects.equals(this.lvName, lvInfoForDescribeMigrationSourcesOutput.lvName) &&
        Objects.equals(this.lvPath, lvInfoForDescribeMigrationSourcesOutput.lvPath) &&
        Objects.equals(this.lvSize, lvInfoForDescribeMigrationSourcesOutput.lvSize) &&
        Objects.equals(this.lvUUID, lvInfoForDescribeMigrationSourcesOutput.lvUUID) &&
        Objects.equals(this.lvUsedSize, lvInfoForDescribeMigrationSourcesOutput.lvUsedSize) &&
        Objects.equals(this.mountPoint, lvInfoForDescribeMigrationSourcesOutput.mountPoint) &&
        Objects.equals(this.vgName, lvInfoForDescribeMigrationSourcesOutput.vgName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(blockDevices, fsType, lvName, lvPath, lvSize, lvUUID, lvUsedSize, mountPoint, vgName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LvInfoForDescribeMigrationSourcesOutput {\n");
    
    sb.append("    blockDevices: ").append(toIndentedString(blockDevices)).append("\n");
    sb.append("    fsType: ").append(toIndentedString(fsType)).append("\n");
    sb.append("    lvName: ").append(toIndentedString(lvName)).append("\n");
    sb.append("    lvPath: ").append(toIndentedString(lvPath)).append("\n");
    sb.append("    lvSize: ").append(toIndentedString(lvSize)).append("\n");
    sb.append("    lvUUID: ").append(toIndentedString(lvUUID)).append("\n");
    sb.append("    lvUsedSize: ").append(toIndentedString(lvUsedSize)).append("\n");
    sb.append("    mountPoint: ").append(toIndentedString(mountPoint)).append("\n");
    sb.append("    vgName: ").append(toIndentedString(vgName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
