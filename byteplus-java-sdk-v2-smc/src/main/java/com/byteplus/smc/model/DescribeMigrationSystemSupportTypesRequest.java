/*
 * smc
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.byteplus.smc.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeMigrationSystemSupportTypesRequest
 */



public class DescribeMigrationSystemSupportTypesRequest {
  @SerializedName("OS")
  private String OS = null;

  @SerializedName("Platform")
  private String platform = null;

  @SerializedName("PlatformVersion")
  private String platformVersion = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  public DescribeMigrationSystemSupportTypesRequest OS(String OS) {
    this.OS = OS;
    return this;
  }

   /**
   * Get OS
   * @return OS
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getOS() {
    return OS;
  }

  public void setOS(String OS) {
    this.OS = OS;
  }

  public DescribeMigrationSystemSupportTypesRequest platform(String platform) {
    this.platform = platform;
    return this;
  }

   /**
   * Get platform
   * @return platform
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getPlatform() {
    return platform;
  }

  public void setPlatform(String platform) {
    this.platform = platform;
  }

  public DescribeMigrationSystemSupportTypesRequest platformVersion(String platformVersion) {
    this.platformVersion = platformVersion;
    return this;
  }

   /**
   * Get platformVersion
   * @return platformVersion
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getPlatformVersion() {
    return platformVersion;
  }

  public void setPlatformVersion(String platformVersion) {
    this.platformVersion = platformVersion;
  }

  public DescribeMigrationSystemSupportTypesRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeMigrationSystemSupportTypesRequest describeMigrationSystemSupportTypesRequest = (DescribeMigrationSystemSupportTypesRequest) o;
    return Objects.equals(this.OS, describeMigrationSystemSupportTypesRequest.OS) &&
        Objects.equals(this.platform, describeMigrationSystemSupportTypesRequest.platform) &&
        Objects.equals(this.platformVersion, describeMigrationSystemSupportTypesRequest.platformVersion) &&
        Objects.equals(this.projectName, describeMigrationSystemSupportTypesRequest.projectName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(OS, platform, platformVersion, projectName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeMigrationSystemSupportTypesRequest {\n");
    
    sb.append("    OS: ").append(toIndentedString(OS)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    platformVersion: ").append(toIndentedString(platformVersion)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
