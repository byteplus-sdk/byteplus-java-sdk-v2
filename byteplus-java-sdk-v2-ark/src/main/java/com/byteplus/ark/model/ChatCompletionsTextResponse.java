/*
 * ark
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.byteplus.ark.model;

import java.util.Objects;
import java.util.Arrays;
import com.byteplus.ark.model.ChoiceForChatCompletionsTextOutput;
import com.byteplus.ark.model.UsageForChatCompletionsTextOutput;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ChatCompletionsTextResponse
 */



public class ChatCompletionsTextResponse extends com.byteplus.model.AbstractResponse {
  @SerializedName("choices")
  private List<ChoiceForChatCompletionsTextOutput> choices = null;

  @SerializedName("created")
  private Integer created = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("model")
  private String model = null;

  @SerializedName("object")
  private String object = null;

  @SerializedName("usage")
  private UsageForChatCompletionsTextOutput usage = null;

  public ChatCompletionsTextResponse choices(List<ChoiceForChatCompletionsTextOutput> choices) {
    this.choices = choices;
    return this;
  }

  public ChatCompletionsTextResponse addChoicesItem(ChoiceForChatCompletionsTextOutput choicesItem) {
    if (this.choices == null) {
      this.choices = new ArrayList<ChoiceForChatCompletionsTextOutput>();
    }
    this.choices.add(choicesItem);
    return this;
  }

   /**
   * Get choices
   * @return choices
  **/
  @Valid
  @Schema(description = "")
  public List<ChoiceForChatCompletionsTextOutput> getChoices() {
    return choices;
  }

  public void setChoices(List<ChoiceForChatCompletionsTextOutput> choices) {
    this.choices = choices;
  }

  public ChatCompletionsTextResponse created(Integer created) {
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @Schema(description = "")
  public Integer getCreated() {
    return created;
  }

  public void setCreated(Integer created) {
    this.created = created;
  }

  public ChatCompletionsTextResponse id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ChatCompletionsTextResponse model(String model) {
    this.model = model;
    return this;
  }

   /**
   * Get model
   * @return model
  **/
  @Schema(description = "")
  public String getModel() {
    return model;
  }

  public void setModel(String model) {
    this.model = model;
  }

  public ChatCompletionsTextResponse object(String object) {
    this.object = object;
    return this;
  }

   /**
   * Get object
   * @return object
  **/
  @Schema(description = "")
  public String getObject() {
    return object;
  }

  public void setObject(String object) {
    this.object = object;
  }

  public ChatCompletionsTextResponse usage(UsageForChatCompletionsTextOutput usage) {
    this.usage = usage;
    return this;
  }

   /**
   * Get usage
   * @return usage
  **/
  @Valid
  @Schema(description = "")
  public UsageForChatCompletionsTextOutput getUsage() {
    return usage;
  }

  public void setUsage(UsageForChatCompletionsTextOutput usage) {
    this.usage = usage;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChatCompletionsTextResponse chatCompletionsTextResponse = (ChatCompletionsTextResponse) o;
    return Objects.equals(this.choices, chatCompletionsTextResponse.choices) &&
        Objects.equals(this.created, chatCompletionsTextResponse.created) &&
        Objects.equals(this.id, chatCompletionsTextResponse.id) &&
        Objects.equals(this.model, chatCompletionsTextResponse.model) &&
        Objects.equals(this.object, chatCompletionsTextResponse.object) &&
        Objects.equals(this.usage, chatCompletionsTextResponse.usage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(choices, created, id, model, object, usage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChatCompletionsTextResponse {\n");
    
    sb.append("    choices: ").append(toIndentedString(choices)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    object: ").append(toIndentedString(object)).append("\n");
    sb.append("    usage: ").append(toIndentedString(usage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
