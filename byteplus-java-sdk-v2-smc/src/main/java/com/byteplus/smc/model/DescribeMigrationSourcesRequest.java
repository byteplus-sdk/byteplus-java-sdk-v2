/*
 * smc
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.byteplus.smc.model;

import java.util.Objects;
import java.util.Arrays;
import com.byteplus.smc.model.TagFilterForDescribeMigrationSourcesInput;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeMigrationSourcesRequest
 */



public class DescribeMigrationSourcesRequest {
  @SerializedName("Order")
  private String order = null;

  @SerializedName("OrderByColumn")
  private String orderByColumn = null;

  @SerializedName("PageNumber")
  private Integer pageNumber = null;

  @SerializedName("PageSize")
  private Integer pageSize = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("SourceId")
  private String sourceId = null;

  @SerializedName("SourceName")
  private String sourceName = null;

  @SerializedName("SourceState")
  private String sourceState = null;

  @SerializedName("SourceType")
  private String sourceType = null;

  @SerializedName("TagFilters")
  private List<TagFilterForDescribeMigrationSourcesInput> tagFilters = null;

  public DescribeMigrationSourcesRequest order(String order) {
    this.order = order;
    return this;
  }

   /**
   * Get order
   * @return order
  **/
  @Schema(description = "")
  public String getOrder() {
    return order;
  }

  public void setOrder(String order) {
    this.order = order;
  }

  public DescribeMigrationSourcesRequest orderByColumn(String orderByColumn) {
    this.orderByColumn = orderByColumn;
    return this;
  }

   /**
   * Get orderByColumn
   * @return orderByColumn
  **/
  @Schema(description = "")
  public String getOrderByColumn() {
    return orderByColumn;
  }

  public void setOrderByColumn(String orderByColumn) {
    this.orderByColumn = orderByColumn;
  }

  public DescribeMigrationSourcesRequest pageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * Get pageNumber
   * @return pageNumber
  **/
  @Schema(description = "")
  public Integer getPageNumber() {
    return pageNumber;
  }

  public void setPageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
  }

  public DescribeMigrationSourcesRequest pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @Schema(description = "")
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  public DescribeMigrationSourcesRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public DescribeMigrationSourcesRequest sourceId(String sourceId) {
    this.sourceId = sourceId;
    return this;
  }

   /**
   * Get sourceId
   * @return sourceId
  **/
  @Schema(description = "")
  public String getSourceId() {
    return sourceId;
  }

  public void setSourceId(String sourceId) {
    this.sourceId = sourceId;
  }

  public DescribeMigrationSourcesRequest sourceName(String sourceName) {
    this.sourceName = sourceName;
    return this;
  }

   /**
   * Get sourceName
   * @return sourceName
  **/
  @Schema(description = "")
  public String getSourceName() {
    return sourceName;
  }

  public void setSourceName(String sourceName) {
    this.sourceName = sourceName;
  }

  public DescribeMigrationSourcesRequest sourceState(String sourceState) {
    this.sourceState = sourceState;
    return this;
  }

   /**
   * Get sourceState
   * @return sourceState
  **/
  @Schema(description = "")
  public String getSourceState() {
    return sourceState;
  }

  public void setSourceState(String sourceState) {
    this.sourceState = sourceState;
  }

  public DescribeMigrationSourcesRequest sourceType(String sourceType) {
    this.sourceType = sourceType;
    return this;
  }

   /**
   * Get sourceType
   * @return sourceType
  **/
  @Schema(description = "")
  public String getSourceType() {
    return sourceType;
  }

  public void setSourceType(String sourceType) {
    this.sourceType = sourceType;
  }

  public DescribeMigrationSourcesRequest tagFilters(List<TagFilterForDescribeMigrationSourcesInput> tagFilters) {
    this.tagFilters = tagFilters;
    return this;
  }

  public DescribeMigrationSourcesRequest addTagFiltersItem(TagFilterForDescribeMigrationSourcesInput tagFiltersItem) {
    if (this.tagFilters == null) {
      this.tagFilters = new ArrayList<TagFilterForDescribeMigrationSourcesInput>();
    }
    this.tagFilters.add(tagFiltersItem);
    return this;
  }

   /**
   * Get tagFilters
   * @return tagFilters
  **/
  @Valid
  @Schema(description = "")
  public List<TagFilterForDescribeMigrationSourcesInput> getTagFilters() {
    return tagFilters;
  }

  public void setTagFilters(List<TagFilterForDescribeMigrationSourcesInput> tagFilters) {
    this.tagFilters = tagFilters;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeMigrationSourcesRequest describeMigrationSourcesRequest = (DescribeMigrationSourcesRequest) o;
    return Objects.equals(this.order, describeMigrationSourcesRequest.order) &&
        Objects.equals(this.orderByColumn, describeMigrationSourcesRequest.orderByColumn) &&
        Objects.equals(this.pageNumber, describeMigrationSourcesRequest.pageNumber) &&
        Objects.equals(this.pageSize, describeMigrationSourcesRequest.pageSize) &&
        Objects.equals(this.projectName, describeMigrationSourcesRequest.projectName) &&
        Objects.equals(this.sourceId, describeMigrationSourcesRequest.sourceId) &&
        Objects.equals(this.sourceName, describeMigrationSourcesRequest.sourceName) &&
        Objects.equals(this.sourceState, describeMigrationSourcesRequest.sourceState) &&
        Objects.equals(this.sourceType, describeMigrationSourcesRequest.sourceType) &&
        Objects.equals(this.tagFilters, describeMigrationSourcesRequest.tagFilters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(order, orderByColumn, pageNumber, pageSize, projectName, sourceId, sourceName, sourceState, sourceType, tagFilters);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeMigrationSourcesRequest {\n");
    
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    orderByColumn: ").append(toIndentedString(orderByColumn)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    sourceId: ").append(toIndentedString(sourceId)).append("\n");
    sb.append("    sourceName: ").append(toIndentedString(sourceName)).append("\n");
    sb.append("    sourceState: ").append(toIndentedString(sourceState)).append("\n");
    sb.append("    sourceType: ").append(toIndentedString(sourceType)).append("\n");
    sb.append("    tagFilters: ").append(toIndentedString(tagFilters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
