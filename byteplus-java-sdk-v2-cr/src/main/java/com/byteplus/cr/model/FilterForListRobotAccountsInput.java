/*
 * cr
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.byteplus.cr.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * FilterForListRobotAccountsInput
 */



public class FilterForListRobotAccountsInput {
  @SerializedName("Descriptions")
  private List<String> descriptions = null;

  @SerializedName("Disabled")
  private Boolean disabled = null;

  @SerializedName("Usernames")
  private List<String> usernames = null;

  public FilterForListRobotAccountsInput descriptions(List<String> descriptions) {
    this.descriptions = descriptions;
    return this;
  }

  public FilterForListRobotAccountsInput addDescriptionsItem(String descriptionsItem) {
    if (this.descriptions == null) {
      this.descriptions = new ArrayList<String>();
    }
    this.descriptions.add(descriptionsItem);
    return this;
  }

   /**
   * Get descriptions
   * @return descriptions
  **/
  @Schema(description = "")
  public List<String> getDescriptions() {
    return descriptions;
  }

  public void setDescriptions(List<String> descriptions) {
    this.descriptions = descriptions;
  }

  public FilterForListRobotAccountsInput disabled(Boolean disabled) {
    this.disabled = disabled;
    return this;
  }

   /**
   * Get disabled
   * @return disabled
  **/
  @Schema(description = "")
  public Boolean isDisabled() {
    return disabled;
  }

  public void setDisabled(Boolean disabled) {
    this.disabled = disabled;
  }

  public FilterForListRobotAccountsInput usernames(List<String> usernames) {
    this.usernames = usernames;
    return this;
  }

  public FilterForListRobotAccountsInput addUsernamesItem(String usernamesItem) {
    if (this.usernames == null) {
      this.usernames = new ArrayList<String>();
    }
    this.usernames.add(usernamesItem);
    return this;
  }

   /**
   * Get usernames
   * @return usernames
  **/
  @Schema(description = "")
  public List<String> getUsernames() {
    return usernames;
  }

  public void setUsernames(List<String> usernames) {
    this.usernames = usernames;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilterForListRobotAccountsInput filterForListRobotAccountsInput = (FilterForListRobotAccountsInput) o;
    return Objects.equals(this.descriptions, filterForListRobotAccountsInput.descriptions) &&
        Objects.equals(this.disabled, filterForListRobotAccountsInput.disabled) &&
        Objects.equals(this.usernames, filterForListRobotAccountsInput.usernames);
  }

  @Override
  public int hashCode() {
    return Objects.hash(descriptions, disabled, usernames);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FilterForListRobotAccountsInput {\n");
    
    sb.append("    descriptions: ").append(toIndentedString(descriptions)).append("\n");
    sb.append("    disabled: ").append(toIndentedString(disabled)).append("\n");
    sb.append("    usernames: ").append(toIndentedString(usernames)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
