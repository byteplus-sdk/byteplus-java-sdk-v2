/*
 * smc
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.byteplus.smc.model;

import java.util.Objects;
import java.util.Arrays;
import com.byteplus.smc.model.DestinationConfigForCreateMigrationJobInput;
import com.byteplus.smc.model.DiskConfigForCreateMigrationJobInput;
import com.byteplus.smc.model.NetworkConfigForCreateMigrationJobInput;
import com.byteplus.smc.model.SyncConfigForCreateMigrationJobInput;
import com.byteplus.smc.model.TagForCreateMigrationJobInput;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CreateMigrationJobRequest
 */



public class CreateMigrationJobRequest {
  @SerializedName("DestinationConfig")
  private DestinationConfigForCreateMigrationJobInput destinationConfig = null;

  @SerializedName("DiskConfigs")
  private List<DiskConfigForCreateMigrationJobInput> diskConfigs = null;

  @SerializedName("MigrationJobDescription")
  private String migrationJobDescription = null;

  @SerializedName("MigrationJobName")
  private String migrationJobName = null;

  @SerializedName("MigrationSourceId")
  private String migrationSourceId = null;

  @SerializedName("NetworkConfig")
  private NetworkConfigForCreateMigrationJobInput networkConfig = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("SyncConfig")
  private SyncConfigForCreateMigrationJobInput syncConfig = null;

  @SerializedName("Tags")
  private List<TagForCreateMigrationJobInput> tags = null;

  public CreateMigrationJobRequest destinationConfig(DestinationConfigForCreateMigrationJobInput destinationConfig) {
    this.destinationConfig = destinationConfig;
    return this;
  }

   /**
   * Get destinationConfig
   * @return destinationConfig
  **/
  @Valid
  @Schema(description = "")
  public DestinationConfigForCreateMigrationJobInput getDestinationConfig() {
    return destinationConfig;
  }

  public void setDestinationConfig(DestinationConfigForCreateMigrationJobInput destinationConfig) {
    this.destinationConfig = destinationConfig;
  }

  public CreateMigrationJobRequest diskConfigs(List<DiskConfigForCreateMigrationJobInput> diskConfigs) {
    this.diskConfigs = diskConfigs;
    return this;
  }

  public CreateMigrationJobRequest addDiskConfigsItem(DiskConfigForCreateMigrationJobInput diskConfigsItem) {
    if (this.diskConfigs == null) {
      this.diskConfigs = new ArrayList<DiskConfigForCreateMigrationJobInput>();
    }
    this.diskConfigs.add(diskConfigsItem);
    return this;
  }

   /**
   * Get diskConfigs
   * @return diskConfigs
  **/
  @Valid
  @Schema(description = "")
  public List<DiskConfigForCreateMigrationJobInput> getDiskConfigs() {
    return diskConfigs;
  }

  public void setDiskConfigs(List<DiskConfigForCreateMigrationJobInput> diskConfigs) {
    this.diskConfigs = diskConfigs;
  }

  public CreateMigrationJobRequest migrationJobDescription(String migrationJobDescription) {
    this.migrationJobDescription = migrationJobDescription;
    return this;
  }

   /**
   * Get migrationJobDescription
   * @return migrationJobDescription
  **/
  @Schema(description = "")
  public String getMigrationJobDescription() {
    return migrationJobDescription;
  }

  public void setMigrationJobDescription(String migrationJobDescription) {
    this.migrationJobDescription = migrationJobDescription;
  }

  public CreateMigrationJobRequest migrationJobName(String migrationJobName) {
    this.migrationJobName = migrationJobName;
    return this;
  }

   /**
   * Get migrationJobName
   * @return migrationJobName
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getMigrationJobName() {
    return migrationJobName;
  }

  public void setMigrationJobName(String migrationJobName) {
    this.migrationJobName = migrationJobName;
  }

  public CreateMigrationJobRequest migrationSourceId(String migrationSourceId) {
    this.migrationSourceId = migrationSourceId;
    return this;
  }

   /**
   * Get migrationSourceId
   * @return migrationSourceId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getMigrationSourceId() {
    return migrationSourceId;
  }

  public void setMigrationSourceId(String migrationSourceId) {
    this.migrationSourceId = migrationSourceId;
  }

  public CreateMigrationJobRequest networkConfig(NetworkConfigForCreateMigrationJobInput networkConfig) {
    this.networkConfig = networkConfig;
    return this;
  }

   /**
   * Get networkConfig
   * @return networkConfig
  **/
  @Valid
  @Schema(description = "")
  public NetworkConfigForCreateMigrationJobInput getNetworkConfig() {
    return networkConfig;
  }

  public void setNetworkConfig(NetworkConfigForCreateMigrationJobInput networkConfig) {
    this.networkConfig = networkConfig;
  }

  public CreateMigrationJobRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public CreateMigrationJobRequest syncConfig(SyncConfigForCreateMigrationJobInput syncConfig) {
    this.syncConfig = syncConfig;
    return this;
  }

   /**
   * Get syncConfig
   * @return syncConfig
  **/
  @Valid
  @Schema(description = "")
  public SyncConfigForCreateMigrationJobInput getSyncConfig() {
    return syncConfig;
  }

  public void setSyncConfig(SyncConfigForCreateMigrationJobInput syncConfig) {
    this.syncConfig = syncConfig;
  }

  public CreateMigrationJobRequest tags(List<TagForCreateMigrationJobInput> tags) {
    this.tags = tags;
    return this;
  }

  public CreateMigrationJobRequest addTagsItem(TagForCreateMigrationJobInput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForCreateMigrationJobInput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForCreateMigrationJobInput> getTags() {
    return tags;
  }

  public void setTags(List<TagForCreateMigrationJobInput> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateMigrationJobRequest createMigrationJobRequest = (CreateMigrationJobRequest) o;
    return Objects.equals(this.destinationConfig, createMigrationJobRequest.destinationConfig) &&
        Objects.equals(this.diskConfigs, createMigrationJobRequest.diskConfigs) &&
        Objects.equals(this.migrationJobDescription, createMigrationJobRequest.migrationJobDescription) &&
        Objects.equals(this.migrationJobName, createMigrationJobRequest.migrationJobName) &&
        Objects.equals(this.migrationSourceId, createMigrationJobRequest.migrationSourceId) &&
        Objects.equals(this.networkConfig, createMigrationJobRequest.networkConfig) &&
        Objects.equals(this.projectName, createMigrationJobRequest.projectName) &&
        Objects.equals(this.syncConfig, createMigrationJobRequest.syncConfig) &&
        Objects.equals(this.tags, createMigrationJobRequest.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(destinationConfig, diskConfigs, migrationJobDescription, migrationJobName, migrationSourceId, networkConfig, projectName, syncConfig, tags);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateMigrationJobRequest {\n");
    
    sb.append("    destinationConfig: ").append(toIndentedString(destinationConfig)).append("\n");
    sb.append("    diskConfigs: ").append(toIndentedString(diskConfigs)).append("\n");
    sb.append("    migrationJobDescription: ").append(toIndentedString(migrationJobDescription)).append("\n");
    sb.append("    migrationJobName: ").append(toIndentedString(migrationJobName)).append("\n");
    sb.append("    migrationSourceId: ").append(toIndentedString(migrationSourceId)).append("\n");
    sb.append("    networkConfig: ").append(toIndentedString(networkConfig)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    syncConfig: ").append(toIndentedString(syncConfig)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
