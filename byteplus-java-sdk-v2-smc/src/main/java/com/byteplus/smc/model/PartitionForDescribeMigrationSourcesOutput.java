/*
 * smc
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.byteplus.smc.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * PartitionForDescribeMigrationSourcesOutput
 */



public class PartitionForDescribeMigrationSourcesOutput {
  @SerializedName("FileSystemFormat")
  private String fileSystemFormat = null;

  @SerializedName("Mountpoint")
  private String mountpoint = null;

  @SerializedName("PartitionIndex")
  private Integer partitionIndex = null;

  @SerializedName("PartitionName")
  private String partitionName = null;

  @SerializedName("PartitionSize")
  private Long partitionSize = null;

  @SerializedName("PartitionUsedSize")
  private Long partitionUsedSize = null;

  public PartitionForDescribeMigrationSourcesOutput fileSystemFormat(String fileSystemFormat) {
    this.fileSystemFormat = fileSystemFormat;
    return this;
  }

   /**
   * Get fileSystemFormat
   * @return fileSystemFormat
  **/
  @Schema(description = "")
  public String getFileSystemFormat() {
    return fileSystemFormat;
  }

  public void setFileSystemFormat(String fileSystemFormat) {
    this.fileSystemFormat = fileSystemFormat;
  }

  public PartitionForDescribeMigrationSourcesOutput mountpoint(String mountpoint) {
    this.mountpoint = mountpoint;
    return this;
  }

   /**
   * Get mountpoint
   * @return mountpoint
  **/
  @Schema(description = "")
  public String getMountpoint() {
    return mountpoint;
  }

  public void setMountpoint(String mountpoint) {
    this.mountpoint = mountpoint;
  }

  public PartitionForDescribeMigrationSourcesOutput partitionIndex(Integer partitionIndex) {
    this.partitionIndex = partitionIndex;
    return this;
  }

   /**
   * Get partitionIndex
   * @return partitionIndex
  **/
  @Schema(description = "")
  public Integer getPartitionIndex() {
    return partitionIndex;
  }

  public void setPartitionIndex(Integer partitionIndex) {
    this.partitionIndex = partitionIndex;
  }

  public PartitionForDescribeMigrationSourcesOutput partitionName(String partitionName) {
    this.partitionName = partitionName;
    return this;
  }

   /**
   * Get partitionName
   * @return partitionName
  **/
  @Schema(description = "")
  public String getPartitionName() {
    return partitionName;
  }

  public void setPartitionName(String partitionName) {
    this.partitionName = partitionName;
  }

  public PartitionForDescribeMigrationSourcesOutput partitionSize(Long partitionSize) {
    this.partitionSize = partitionSize;
    return this;
  }

   /**
   * Get partitionSize
   * @return partitionSize
  **/
  @Schema(description = "")
  public Long getPartitionSize() {
    return partitionSize;
  }

  public void setPartitionSize(Long partitionSize) {
    this.partitionSize = partitionSize;
  }

  public PartitionForDescribeMigrationSourcesOutput partitionUsedSize(Long partitionUsedSize) {
    this.partitionUsedSize = partitionUsedSize;
    return this;
  }

   /**
   * Get partitionUsedSize
   * @return partitionUsedSize
  **/
  @Schema(description = "")
  public Long getPartitionUsedSize() {
    return partitionUsedSize;
  }

  public void setPartitionUsedSize(Long partitionUsedSize) {
    this.partitionUsedSize = partitionUsedSize;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PartitionForDescribeMigrationSourcesOutput partitionForDescribeMigrationSourcesOutput = (PartitionForDescribeMigrationSourcesOutput) o;
    return Objects.equals(this.fileSystemFormat, partitionForDescribeMigrationSourcesOutput.fileSystemFormat) &&
        Objects.equals(this.mountpoint, partitionForDescribeMigrationSourcesOutput.mountpoint) &&
        Objects.equals(this.partitionIndex, partitionForDescribeMigrationSourcesOutput.partitionIndex) &&
        Objects.equals(this.partitionName, partitionForDescribeMigrationSourcesOutput.partitionName) &&
        Objects.equals(this.partitionSize, partitionForDescribeMigrationSourcesOutput.partitionSize) &&
        Objects.equals(this.partitionUsedSize, partitionForDescribeMigrationSourcesOutput.partitionUsedSize);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fileSystemFormat, mountpoint, partitionIndex, partitionName, partitionSize, partitionUsedSize);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PartitionForDescribeMigrationSourcesOutput {\n");
    
    sb.append("    fileSystemFormat: ").append(toIndentedString(fileSystemFormat)).append("\n");
    sb.append("    mountpoint: ").append(toIndentedString(mountpoint)).append("\n");
    sb.append("    partitionIndex: ").append(toIndentedString(partitionIndex)).append("\n");
    sb.append("    partitionName: ").append(toIndentedString(partitionName)).append("\n");
    sb.append("    partitionSize: ").append(toIndentedString(partitionSize)).append("\n");
    sb.append("    partitionUsedSize: ").append(toIndentedString(partitionUsedSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
