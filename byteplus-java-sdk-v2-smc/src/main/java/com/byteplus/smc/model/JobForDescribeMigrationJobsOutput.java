/*
 * smc
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.byteplus.smc.model;

import java.util.Objects;
import java.util.Arrays;
import com.byteplus.smc.model.DestinationConfigForDescribeMigrationJobsOutput;
import com.byteplus.smc.model.NetworkConfigForDescribeMigrationJobsOutput;
import com.byteplus.smc.model.SyncConfigForDescribeMigrationJobsOutput;
import com.byteplus.smc.model.SystemConfigForDescribeMigrationJobsOutput;
import com.byteplus.smc.model.TagForDescribeMigrationJobsOutput;
import com.byteplus.smc.model.TemporaryResourceForDescribeMigrationJobsOutput;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * JobForDescribeMigrationJobsOutput
 */



public class JobForDescribeMigrationJobsOutput {
  @SerializedName("CreatedAt")
  private String createdAt = null;

  @SerializedName("DestinationConfig")
  private DestinationConfigForDescribeMigrationJobsOutput destinationConfig = null;

  @SerializedName("FinishedAt")
  private String finishedAt = null;

  @SerializedName("LastSyncTime")
  private String lastSyncTime = null;

  @SerializedName("MigrationJobDescription")
  private String migrationJobDescription = null;

  @SerializedName("MigrationJobId")
  private String migrationJobId = null;

  @SerializedName("MigrationJobName")
  private String migrationJobName = null;

  @SerializedName("MigrationSourceId")
  private String migrationSourceId = null;

  @SerializedName("MigrationSourceName")
  private String migrationSourceName = null;

  @SerializedName("MigrationStateTips")
  private String migrationStateTips = null;

  @SerializedName("NetworkConfig")
  private NetworkConfigForDescribeMigrationJobsOutput networkConfig = null;

  @SerializedName("Progress")
  private Integer progress = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("SourceProjectName")
  private String sourceProjectName = null;

  @SerializedName("SourceType")
  private String sourceType = null;

  @SerializedName("StartedAt")
  private String startedAt = null;

  @SerializedName("State")
  private String state = null;

  @SerializedName("SyncConfig")
  private SyncConfigForDescribeMigrationJobsOutput syncConfig = null;

  @SerializedName("SystemConfig")
  private SystemConfigForDescribeMigrationJobsOutput systemConfig = null;

  @SerializedName("Tags")
  private List<TagForDescribeMigrationJobsOutput> tags = null;

  @SerializedName("TemporaryResources")
  private List<TemporaryResourceForDescribeMigrationJobsOutput> temporaryResources = null;

  public JobForDescribeMigrationJobsOutput createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(description = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public JobForDescribeMigrationJobsOutput destinationConfig(DestinationConfigForDescribeMigrationJobsOutput destinationConfig) {
    this.destinationConfig = destinationConfig;
    return this;
  }

   /**
   * Get destinationConfig
   * @return destinationConfig
  **/
  @Valid
  @Schema(description = "")
  public DestinationConfigForDescribeMigrationJobsOutput getDestinationConfig() {
    return destinationConfig;
  }

  public void setDestinationConfig(DestinationConfigForDescribeMigrationJobsOutput destinationConfig) {
    this.destinationConfig = destinationConfig;
  }

  public JobForDescribeMigrationJobsOutput finishedAt(String finishedAt) {
    this.finishedAt = finishedAt;
    return this;
  }

   /**
   * Get finishedAt
   * @return finishedAt
  **/
  @Schema(description = "")
  public String getFinishedAt() {
    return finishedAt;
  }

  public void setFinishedAt(String finishedAt) {
    this.finishedAt = finishedAt;
  }

  public JobForDescribeMigrationJobsOutput lastSyncTime(String lastSyncTime) {
    this.lastSyncTime = lastSyncTime;
    return this;
  }

   /**
   * Get lastSyncTime
   * @return lastSyncTime
  **/
  @Schema(description = "")
  public String getLastSyncTime() {
    return lastSyncTime;
  }

  public void setLastSyncTime(String lastSyncTime) {
    this.lastSyncTime = lastSyncTime;
  }

  public JobForDescribeMigrationJobsOutput migrationJobDescription(String migrationJobDescription) {
    this.migrationJobDescription = migrationJobDescription;
    return this;
  }

   /**
   * Get migrationJobDescription
   * @return migrationJobDescription
  **/
  @Schema(description = "")
  public String getMigrationJobDescription() {
    return migrationJobDescription;
  }

  public void setMigrationJobDescription(String migrationJobDescription) {
    this.migrationJobDescription = migrationJobDescription;
  }

  public JobForDescribeMigrationJobsOutput migrationJobId(String migrationJobId) {
    this.migrationJobId = migrationJobId;
    return this;
  }

   /**
   * Get migrationJobId
   * @return migrationJobId
  **/
  @Schema(description = "")
  public String getMigrationJobId() {
    return migrationJobId;
  }

  public void setMigrationJobId(String migrationJobId) {
    this.migrationJobId = migrationJobId;
  }

  public JobForDescribeMigrationJobsOutput migrationJobName(String migrationJobName) {
    this.migrationJobName = migrationJobName;
    return this;
  }

   /**
   * Get migrationJobName
   * @return migrationJobName
  **/
  @Schema(description = "")
  public String getMigrationJobName() {
    return migrationJobName;
  }

  public void setMigrationJobName(String migrationJobName) {
    this.migrationJobName = migrationJobName;
  }

  public JobForDescribeMigrationJobsOutput migrationSourceId(String migrationSourceId) {
    this.migrationSourceId = migrationSourceId;
    return this;
  }

   /**
   * Get migrationSourceId
   * @return migrationSourceId
  **/
  @Schema(description = "")
  public String getMigrationSourceId() {
    return migrationSourceId;
  }

  public void setMigrationSourceId(String migrationSourceId) {
    this.migrationSourceId = migrationSourceId;
  }

  public JobForDescribeMigrationJobsOutput migrationSourceName(String migrationSourceName) {
    this.migrationSourceName = migrationSourceName;
    return this;
  }

   /**
   * Get migrationSourceName
   * @return migrationSourceName
  **/
  @Schema(description = "")
  public String getMigrationSourceName() {
    return migrationSourceName;
  }

  public void setMigrationSourceName(String migrationSourceName) {
    this.migrationSourceName = migrationSourceName;
  }

  public JobForDescribeMigrationJobsOutput migrationStateTips(String migrationStateTips) {
    this.migrationStateTips = migrationStateTips;
    return this;
  }

   /**
   * Get migrationStateTips
   * @return migrationStateTips
  **/
  @Schema(description = "")
  public String getMigrationStateTips() {
    return migrationStateTips;
  }

  public void setMigrationStateTips(String migrationStateTips) {
    this.migrationStateTips = migrationStateTips;
  }

  public JobForDescribeMigrationJobsOutput networkConfig(NetworkConfigForDescribeMigrationJobsOutput networkConfig) {
    this.networkConfig = networkConfig;
    return this;
  }

   /**
   * Get networkConfig
   * @return networkConfig
  **/
  @Valid
  @Schema(description = "")
  public NetworkConfigForDescribeMigrationJobsOutput getNetworkConfig() {
    return networkConfig;
  }

  public void setNetworkConfig(NetworkConfigForDescribeMigrationJobsOutput networkConfig) {
    this.networkConfig = networkConfig;
  }

  public JobForDescribeMigrationJobsOutput progress(Integer progress) {
    this.progress = progress;
    return this;
  }

   /**
   * Get progress
   * @return progress
  **/
  @Schema(description = "")
  public Integer getProgress() {
    return progress;
  }

  public void setProgress(Integer progress) {
    this.progress = progress;
  }

  public JobForDescribeMigrationJobsOutput projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public JobForDescribeMigrationJobsOutput sourceProjectName(String sourceProjectName) {
    this.sourceProjectName = sourceProjectName;
    return this;
  }

   /**
   * Get sourceProjectName
   * @return sourceProjectName
  **/
  @Schema(description = "")
  public String getSourceProjectName() {
    return sourceProjectName;
  }

  public void setSourceProjectName(String sourceProjectName) {
    this.sourceProjectName = sourceProjectName;
  }

  public JobForDescribeMigrationJobsOutput sourceType(String sourceType) {
    this.sourceType = sourceType;
    return this;
  }

   /**
   * Get sourceType
   * @return sourceType
  **/
  @Schema(description = "")
  public String getSourceType() {
    return sourceType;
  }

  public void setSourceType(String sourceType) {
    this.sourceType = sourceType;
  }

  public JobForDescribeMigrationJobsOutput startedAt(String startedAt) {
    this.startedAt = startedAt;
    return this;
  }

   /**
   * Get startedAt
   * @return startedAt
  **/
  @Schema(description = "")
  public String getStartedAt() {
    return startedAt;
  }

  public void setStartedAt(String startedAt) {
    this.startedAt = startedAt;
  }

  public JobForDescribeMigrationJobsOutput state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @Schema(description = "")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public JobForDescribeMigrationJobsOutput syncConfig(SyncConfigForDescribeMigrationJobsOutput syncConfig) {
    this.syncConfig = syncConfig;
    return this;
  }

   /**
   * Get syncConfig
   * @return syncConfig
  **/
  @Valid
  @Schema(description = "")
  public SyncConfigForDescribeMigrationJobsOutput getSyncConfig() {
    return syncConfig;
  }

  public void setSyncConfig(SyncConfigForDescribeMigrationJobsOutput syncConfig) {
    this.syncConfig = syncConfig;
  }

  public JobForDescribeMigrationJobsOutput systemConfig(SystemConfigForDescribeMigrationJobsOutput systemConfig) {
    this.systemConfig = systemConfig;
    return this;
  }

   /**
   * Get systemConfig
   * @return systemConfig
  **/
  @Valid
  @Schema(description = "")
  public SystemConfigForDescribeMigrationJobsOutput getSystemConfig() {
    return systemConfig;
  }

  public void setSystemConfig(SystemConfigForDescribeMigrationJobsOutput systemConfig) {
    this.systemConfig = systemConfig;
  }

  public JobForDescribeMigrationJobsOutput tags(List<TagForDescribeMigrationJobsOutput> tags) {
    this.tags = tags;
    return this;
  }

  public JobForDescribeMigrationJobsOutput addTagsItem(TagForDescribeMigrationJobsOutput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForDescribeMigrationJobsOutput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForDescribeMigrationJobsOutput> getTags() {
    return tags;
  }

  public void setTags(List<TagForDescribeMigrationJobsOutput> tags) {
    this.tags = tags;
  }

  public JobForDescribeMigrationJobsOutput temporaryResources(List<TemporaryResourceForDescribeMigrationJobsOutput> temporaryResources) {
    this.temporaryResources = temporaryResources;
    return this;
  }

  public JobForDescribeMigrationJobsOutput addTemporaryResourcesItem(TemporaryResourceForDescribeMigrationJobsOutput temporaryResourcesItem) {
    if (this.temporaryResources == null) {
      this.temporaryResources = new ArrayList<TemporaryResourceForDescribeMigrationJobsOutput>();
    }
    this.temporaryResources.add(temporaryResourcesItem);
    return this;
  }

   /**
   * Get temporaryResources
   * @return temporaryResources
  **/
  @Valid
  @Schema(description = "")
  public List<TemporaryResourceForDescribeMigrationJobsOutput> getTemporaryResources() {
    return temporaryResources;
  }

  public void setTemporaryResources(List<TemporaryResourceForDescribeMigrationJobsOutput> temporaryResources) {
    this.temporaryResources = temporaryResources;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobForDescribeMigrationJobsOutput jobForDescribeMigrationJobsOutput = (JobForDescribeMigrationJobsOutput) o;
    return Objects.equals(this.createdAt, jobForDescribeMigrationJobsOutput.createdAt) &&
        Objects.equals(this.destinationConfig, jobForDescribeMigrationJobsOutput.destinationConfig) &&
        Objects.equals(this.finishedAt, jobForDescribeMigrationJobsOutput.finishedAt) &&
        Objects.equals(this.lastSyncTime, jobForDescribeMigrationJobsOutput.lastSyncTime) &&
        Objects.equals(this.migrationJobDescription, jobForDescribeMigrationJobsOutput.migrationJobDescription) &&
        Objects.equals(this.migrationJobId, jobForDescribeMigrationJobsOutput.migrationJobId) &&
        Objects.equals(this.migrationJobName, jobForDescribeMigrationJobsOutput.migrationJobName) &&
        Objects.equals(this.migrationSourceId, jobForDescribeMigrationJobsOutput.migrationSourceId) &&
        Objects.equals(this.migrationSourceName, jobForDescribeMigrationJobsOutput.migrationSourceName) &&
        Objects.equals(this.migrationStateTips, jobForDescribeMigrationJobsOutput.migrationStateTips) &&
        Objects.equals(this.networkConfig, jobForDescribeMigrationJobsOutput.networkConfig) &&
        Objects.equals(this.progress, jobForDescribeMigrationJobsOutput.progress) &&
        Objects.equals(this.projectName, jobForDescribeMigrationJobsOutput.projectName) &&
        Objects.equals(this.sourceProjectName, jobForDescribeMigrationJobsOutput.sourceProjectName) &&
        Objects.equals(this.sourceType, jobForDescribeMigrationJobsOutput.sourceType) &&
        Objects.equals(this.startedAt, jobForDescribeMigrationJobsOutput.startedAt) &&
        Objects.equals(this.state, jobForDescribeMigrationJobsOutput.state) &&
        Objects.equals(this.syncConfig, jobForDescribeMigrationJobsOutput.syncConfig) &&
        Objects.equals(this.systemConfig, jobForDescribeMigrationJobsOutput.systemConfig) &&
        Objects.equals(this.tags, jobForDescribeMigrationJobsOutput.tags) &&
        Objects.equals(this.temporaryResources, jobForDescribeMigrationJobsOutput.temporaryResources);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, destinationConfig, finishedAt, lastSyncTime, migrationJobDescription, migrationJobId, migrationJobName, migrationSourceId, migrationSourceName, migrationStateTips, networkConfig, progress, projectName, sourceProjectName, sourceType, startedAt, state, syncConfig, systemConfig, tags, temporaryResources);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobForDescribeMigrationJobsOutput {\n");
    
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    destinationConfig: ").append(toIndentedString(destinationConfig)).append("\n");
    sb.append("    finishedAt: ").append(toIndentedString(finishedAt)).append("\n");
    sb.append("    lastSyncTime: ").append(toIndentedString(lastSyncTime)).append("\n");
    sb.append("    migrationJobDescription: ").append(toIndentedString(migrationJobDescription)).append("\n");
    sb.append("    migrationJobId: ").append(toIndentedString(migrationJobId)).append("\n");
    sb.append("    migrationJobName: ").append(toIndentedString(migrationJobName)).append("\n");
    sb.append("    migrationSourceId: ").append(toIndentedString(migrationSourceId)).append("\n");
    sb.append("    migrationSourceName: ").append(toIndentedString(migrationSourceName)).append("\n");
    sb.append("    migrationStateTips: ").append(toIndentedString(migrationStateTips)).append("\n");
    sb.append("    networkConfig: ").append(toIndentedString(networkConfig)).append("\n");
    sb.append("    progress: ").append(toIndentedString(progress)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    sourceProjectName: ").append(toIndentedString(sourceProjectName)).append("\n");
    sb.append("    sourceType: ").append(toIndentedString(sourceType)).append("\n");
    sb.append("    startedAt: ").append(toIndentedString(startedAt)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    syncConfig: ").append(toIndentedString(syncConfig)).append("\n");
    sb.append("    systemConfig: ").append(toIndentedString(systemConfig)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    temporaryResources: ").append(toIndentedString(temporaryResources)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
