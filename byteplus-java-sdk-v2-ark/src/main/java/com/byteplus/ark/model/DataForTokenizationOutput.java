/*
 * ark
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.byteplus.ark.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DataForTokenizationOutput
 */



public class DataForTokenizationOutput {
  @SerializedName("index")
  private Integer index = null;

  @SerializedName("object")
  private String object = null;

  @SerializedName("offset_mapping")
  private List<Integer> offsetMapping = null;

  @SerializedName("token_ids")
  private List<Integer> tokenIds = null;

  @SerializedName("total_tokens")
  private Integer totalTokens = null;

  public DataForTokenizationOutput index(Integer index) {
    this.index = index;
    return this;
  }

   /**
   * Get index
   * @return index
  **/
  @Schema(description = "")
  public Integer getIndex() {
    return index;
  }

  public void setIndex(Integer index) {
    this.index = index;
  }

  public DataForTokenizationOutput object(String object) {
    this.object = object;
    return this;
  }

   /**
   * Get object
   * @return object
  **/
  @Schema(description = "")
  public String getObject() {
    return object;
  }

  public void setObject(String object) {
    this.object = object;
  }

  public DataForTokenizationOutput offsetMapping(List<Integer> offsetMapping) {
    this.offsetMapping = offsetMapping;
    return this;
  }

  public DataForTokenizationOutput addOffsetMappingItem(Integer offsetMappingItem) {
    if (this.offsetMapping == null) {
      this.offsetMapping = new ArrayList<Integer>();
    }
    this.offsetMapping.add(offsetMappingItem);
    return this;
  }

   /**
   * Get offsetMapping
   * @return offsetMapping
  **/
  @Schema(description = "")
  public List<Integer> getOffsetMapping() {
    return offsetMapping;
  }

  public void setOffsetMapping(List<Integer> offsetMapping) {
    this.offsetMapping = offsetMapping;
  }

  public DataForTokenizationOutput tokenIds(List<Integer> tokenIds) {
    this.tokenIds = tokenIds;
    return this;
  }

  public DataForTokenizationOutput addTokenIdsItem(Integer tokenIdsItem) {
    if (this.tokenIds == null) {
      this.tokenIds = new ArrayList<Integer>();
    }
    this.tokenIds.add(tokenIdsItem);
    return this;
  }

   /**
   * Get tokenIds
   * @return tokenIds
  **/
  @Schema(description = "")
  public List<Integer> getTokenIds() {
    return tokenIds;
  }

  public void setTokenIds(List<Integer> tokenIds) {
    this.tokenIds = tokenIds;
  }

  public DataForTokenizationOutput totalTokens(Integer totalTokens) {
    this.totalTokens = totalTokens;
    return this;
  }

   /**
   * Get totalTokens
   * @return totalTokens
  **/
  @Schema(description = "")
  public Integer getTotalTokens() {
    return totalTokens;
  }

  public void setTotalTokens(Integer totalTokens) {
    this.totalTokens = totalTokens;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataForTokenizationOutput dataForTokenizationOutput = (DataForTokenizationOutput) o;
    return Objects.equals(this.index, dataForTokenizationOutput.index) &&
        Objects.equals(this.object, dataForTokenizationOutput.object) &&
        Objects.equals(this.offsetMapping, dataForTokenizationOutput.offsetMapping) &&
        Objects.equals(this.tokenIds, dataForTokenizationOutput.tokenIds) &&
        Objects.equals(this.totalTokens, dataForTokenizationOutput.totalTokens);
  }

  @Override
  public int hashCode() {
    return Objects.hash(index, object, offsetMapping, tokenIds, totalTokens);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataForTokenizationOutput {\n");
    
    sb.append("    index: ").append(toIndentedString(index)).append("\n");
    sb.append("    object: ").append(toIndentedString(object)).append("\n");
    sb.append("    offsetMapping: ").append(toIndentedString(offsetMapping)).append("\n");
    sb.append("    tokenIds: ").append(toIndentedString(tokenIds)).append("\n");
    sb.append("    totalTokens: ").append(toIndentedString(totalTokens)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
