/*
 * ark
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.byteplus.ark.model;

import java.util.Objects;
import java.util.Arrays;
import com.byteplus.ark.model.ImageUrlForEmbeddingsMultimodalInput;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * InputForEmbeddingsMultimodalInput
 */



public class InputForEmbeddingsMultimodalInput {
  @SerializedName("image_url")
  private ImageUrlForEmbeddingsMultimodalInput imageUrl = null;

  @SerializedName("text")
  private String text = null;

  @SerializedName("type")
  private String type = null;

  public InputForEmbeddingsMultimodalInput imageUrl(ImageUrlForEmbeddingsMultimodalInput imageUrl) {
    this.imageUrl = imageUrl;
    return this;
  }

   /**
   * Get imageUrl
   * @return imageUrl
  **/
  @Valid
  @Schema(description = "")
  public ImageUrlForEmbeddingsMultimodalInput getImageUrl() {
    return imageUrl;
  }

  public void setImageUrl(ImageUrlForEmbeddingsMultimodalInput imageUrl) {
    this.imageUrl = imageUrl;
  }

  public InputForEmbeddingsMultimodalInput text(String text) {
    this.text = text;
    return this;
  }

   /**
   * Get text
   * @return text
  **/
  @Schema(description = "")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public InputForEmbeddingsMultimodalInput type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InputForEmbeddingsMultimodalInput inputForEmbeddingsMultimodalInput = (InputForEmbeddingsMultimodalInput) o;
    return Objects.equals(this.imageUrl, inputForEmbeddingsMultimodalInput.imageUrl) &&
        Objects.equals(this.text, inputForEmbeddingsMultimodalInput.text) &&
        Objects.equals(this.type, inputForEmbeddingsMultimodalInput.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(imageUrl, text, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InputForEmbeddingsMultimodalInput {\n");
    
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
