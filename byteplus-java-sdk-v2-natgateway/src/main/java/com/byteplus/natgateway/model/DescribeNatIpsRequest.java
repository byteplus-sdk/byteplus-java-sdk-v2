/*
 * natgateway
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.byteplus.natgateway.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeNatIpsRequest
 */



public class DescribeNatIpsRequest {
  @SerializedName("NatGatewayId")
  private String natGatewayId = null;

  @SerializedName("NatIpIds")
  private List<String> natIpIds = null;

  @SerializedName("NatIpName")
  private String natIpName = null;

  @SerializedName("PageNumber")
  private Integer pageNumber = null;

  @SerializedName("PageSize")
  private Integer pageSize = null;

  public DescribeNatIpsRequest natGatewayId(String natGatewayId) {
    this.natGatewayId = natGatewayId;
    return this;
  }

   /**
   * Get natGatewayId
   * @return natGatewayId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getNatGatewayId() {
    return natGatewayId;
  }

  public void setNatGatewayId(String natGatewayId) {
    this.natGatewayId = natGatewayId;
  }

  public DescribeNatIpsRequest natIpIds(List<String> natIpIds) {
    this.natIpIds = natIpIds;
    return this;
  }

  public DescribeNatIpsRequest addNatIpIdsItem(String natIpIdsItem) {
    if (this.natIpIds == null) {
      this.natIpIds = new ArrayList<String>();
    }
    this.natIpIds.add(natIpIdsItem);
    return this;
  }

   /**
   * Get natIpIds
   * @return natIpIds
  **/
  @Schema(description = "")
  public List<String> getNatIpIds() {
    return natIpIds;
  }

  public void setNatIpIds(List<String> natIpIds) {
    this.natIpIds = natIpIds;
  }

  public DescribeNatIpsRequest natIpName(String natIpName) {
    this.natIpName = natIpName;
    return this;
  }

   /**
   * Get natIpName
   * @return natIpName
  **/
  @Schema(description = "")
  public String getNatIpName() {
    return natIpName;
  }

  public void setNatIpName(String natIpName) {
    this.natIpName = natIpName;
  }

  public DescribeNatIpsRequest pageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * Get pageNumber
   * @return pageNumber
  **/
  @Schema(description = "")
  public Integer getPageNumber() {
    return pageNumber;
  }

  public void setPageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
  }

  public DescribeNatIpsRequest pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @Schema(description = "")
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeNatIpsRequest describeNatIpsRequest = (DescribeNatIpsRequest) o;
    return Objects.equals(this.natGatewayId, describeNatIpsRequest.natGatewayId) &&
        Objects.equals(this.natIpIds, describeNatIpsRequest.natIpIds) &&
        Objects.equals(this.natIpName, describeNatIpsRequest.natIpName) &&
        Objects.equals(this.pageNumber, describeNatIpsRequest.pageNumber) &&
        Objects.equals(this.pageSize, describeNatIpsRequest.pageSize);
  }

  @Override
  public int hashCode() {
    return Objects.hash(natGatewayId, natIpIds, natIpName, pageNumber, pageSize);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeNatIpsRequest {\n");
    
    sb.append("    natGatewayId: ").append(toIndentedString(natGatewayId)).append("\n");
    sb.append("    natIpIds: ").append(toIndentedString(natIpIds)).append("\n");
    sb.append("    natIpName: ").append(toIndentedString(natIpName)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
