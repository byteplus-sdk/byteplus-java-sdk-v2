/*
 * eco_partner
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.byteplus.ecopartner.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * GetCustomerDetailsByTypeRequest
 */



public class GetCustomerDetailsByTypeRequest {
  /**
   * Gets or Sets customerType
   */
  @JsonAdapter(CustomerTypeEnum.Adapter.class)
  public enum CustomerTypeEnum {
    @SerializedName("EndCustomer")
    ENDCUSTOMER("EndCustomer"),
    @SerializedName("Distributor-Reseller")
    DISTRIBUTOR_RESELLER("Distributor-Reseller");

    private String value;

    CustomerTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static CustomerTypeEnum fromValue(String input) {
      for (CustomerTypeEnum b : CustomerTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<CustomerTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CustomerTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public CustomerTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return CustomerTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("CustomerType")
  private CustomerTypeEnum customerType = null;

  public GetCustomerDetailsByTypeRequest customerType(CustomerTypeEnum customerType) {
    this.customerType = customerType;
    return this;
  }

   /**
   * Get customerType
   * @return customerType
  **/
  @Schema(description = "")
  public CustomerTypeEnum getCustomerType() {
    return customerType;
  }

  public void setCustomerType(CustomerTypeEnum customerType) {
    this.customerType = customerType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetCustomerDetailsByTypeRequest getCustomerDetailsByTypeRequest = (GetCustomerDetailsByTypeRequest) o;
    return Objects.equals(this.customerType, getCustomerDetailsByTypeRequest.customerType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customerType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetCustomerDetailsByTypeRequest {\n");
    
    sb.append("    customerType: ").append(toIndentedString(customerType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
