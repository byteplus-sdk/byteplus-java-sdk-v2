/*
 * filenas
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.byteplus.filenas.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ClientForDescribeMountedClientsOutput
 */



public class ClientForDescribeMountedClientsOutput {
  @SerializedName("Ip")
  private String ip = null;

  /**
   * Gets or Sets protocolVersion
   */
  @JsonAdapter(ProtocolVersionEnum.Adapter.class)
  public enum ProtocolVersionEnum {
    @SerializedName("NFSv3")
    NFSV3("NFSv3"),
    @SerializedName("NFSv4")
    NFSV4("NFSv4");

    private String value;

    ProtocolVersionEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ProtocolVersionEnum fromValue(String input) {
      for (ProtocolVersionEnum b : ProtocolVersionEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ProtocolVersionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ProtocolVersionEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public ProtocolVersionEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ProtocolVersionEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("ProtocolVersion")
  private ProtocolVersionEnum protocolVersion = null;

  @SerializedName("VpcName")
  private String vpcName = null;

  public ClientForDescribeMountedClientsOutput ip(String ip) {
    this.ip = ip;
    return this;
  }

   /**
   * Get ip
   * @return ip
  **/
  @Schema(description = "")
  public String getIp() {
    return ip;
  }

  public void setIp(String ip) {
    this.ip = ip;
  }

  public ClientForDescribeMountedClientsOutput protocolVersion(ProtocolVersionEnum protocolVersion) {
    this.protocolVersion = protocolVersion;
    return this;
  }

   /**
   * Get protocolVersion
   * @return protocolVersion
  **/
  @Schema(description = "")
  public ProtocolVersionEnum getProtocolVersion() {
    return protocolVersion;
  }

  public void setProtocolVersion(ProtocolVersionEnum protocolVersion) {
    this.protocolVersion = protocolVersion;
  }

  public ClientForDescribeMountedClientsOutput vpcName(String vpcName) {
    this.vpcName = vpcName;
    return this;
  }

   /**
   * Get vpcName
   * @return vpcName
  **/
  @Schema(description = "")
  public String getVpcName() {
    return vpcName;
  }

  public void setVpcName(String vpcName) {
    this.vpcName = vpcName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClientForDescribeMountedClientsOutput clientForDescribeMountedClientsOutput = (ClientForDescribeMountedClientsOutput) o;
    return Objects.equals(this.ip, clientForDescribeMountedClientsOutput.ip) &&
        Objects.equals(this.protocolVersion, clientForDescribeMountedClientsOutput.protocolVersion) &&
        Objects.equals(this.vpcName, clientForDescribeMountedClientsOutput.vpcName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ip, protocolVersion, vpcName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClientForDescribeMountedClientsOutput {\n");
    
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("    protocolVersion: ").append(toIndentedString(protocolVersion)).append("\n");
    sb.append("    vpcName: ").append(toIndentedString(vpcName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
